apply plugin: 'com.android.application'
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.letv.walletbiz"
        minSdkVersion 23
        targetSdkVersion 24
        versionCode 10104
        versionName getVersionName(versionCode)
        multiDexEnabled false
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        platform {
            storeFile file('../tools/sign/platform.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.flags'
            signingConfig signingConfigs.platform
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.flags'
            signingConfig signingConfigs.platform
        }
    }
}
repositories {
    jcenter()
    flatDir {
        dirs '../LetvWalletCommon/libs'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':LetvWalletCommon')
    compile project(':LetvWallet/library/LeuiRecommend')
    compile project(':LetvWallet/library/letvwalletsigncheck')
}

def getVersionName(versionCode) {
    def prefix = (versionCode.intdiv(10000)) + "." + (versionCode.intdiv(100) % 100) + "." + (versionCode % 100)
    def walletCmd = 'git rev-list HEAD --first-parent --count LetvWallet'
    def commonCmd = 'git rev-list HEAD --first-parent --count LetvWalletCommon'
    def result = walletCmd.execute().text.trim().toInteger().plus(commonCmd.execute().text.trim().toInteger())
    return prefix + " build" + result
}
